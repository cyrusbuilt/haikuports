SUMMARY="Multi-platform Git client written with Qt"
DESCRIPTION="GitQlient, pronounced as git+client (/gɪtˈklaɪənt/) is a \
multi-platform Git client originally forked from QGit. \
Nowadays it goes beyond of just a fork and adds a lot of new functionality. \
Some of the major feature you can find are: \
New features: \
Easy access to remote actions like: push, pull, submodules management and \
branches \
Branches management \
Tags and stashes management \
Submodules handling \
Allow to open several repositories in the same window \
Better visualization of the commits and the work in progress \
Better visualization of the repository view \
Improved UI experience \
Easy access to the main Git actions \
Better code separation between Views and Models \
Simplification of the different options one can do, keeping it to what a Git \
client is."
HOMEPAGE="https://francescmm.github.io/GitQlient/"
COPYRIGHT="2020 Francesc M."
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://github.com/francescmm/GitQlient/archive/v1.2.0-rc.tar.gz"
CHECKSUM_SHA256="2bfd11994c89961c7af4b5cfd90e7d112c38898e60555fc694f9e057ddf51e5e"
SOURCE_FILENAME="v1.2.0-rc.tar.gz"
SOURCE_DIR="GitQlient-1.2.0-rc"
ADDITIONAL_FILES="gitqlient.rdef.in"
PATCHES="gitqlient-1.2.0.patchset"

ARCHITECTURES="!x86_gcc2 x86 x86_64 ?arm ?ppc"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	gitqlient$secondaryArchSuffix = $portVersion
	app:GitQlient
	"
REQUIRES="
        haiku$secondaryArchSuffix
        cmd:file
        cmd:git
        lib:libGL$secondaryArchSuffix
        lib:libQt5Core$secondaryArchSuffix
        lib:libQt5Gui$secondaryArchSuffix
        lib:libQt5Widgets$secondaryArchSuffix
        "

BUILD_REQUIRES="
        haiku${secondaryArchSuffix}_devel
        devel:libQt5Core$secondaryArchSuffix
        devel:libQt5Gui$secondaryArchSuffix
        devel:libQt5Widgets$secondaryArchSuffix
        "
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:git
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:curl
	cmd:unzip
	cmd:sed
	cmd:pkg_config$secondaryArchSuffix
	cmd:qmake$secondaryArchSuffix >= 5
	"

defineDebugInfoPackage gitqlient$secondaryArchSuffix \
	$appsDir/GitQlient

getSourceSubmodules()
{
	local baseUrl=https://codeload.github.com/francescmm
	local bmtCommitHash=44dde32d9e79c075a03190bc86753102b14ac663
	local qlCommitHash=049bf73c50ceeadd5de989f76258d94d97b1dce8
	local qpwCommitHash=4a9d3af084194b803dc8e2b89640b9a97043dab7
	rm -rf BenchmarkTool
	rm -rf QLogger
	rm -rf QPinnableTabWidget
	curl -o BenchmarkTool.zip $baseUrl/BenchmarkTool/zip/$bmtCommitHash
	curl -o QLogger.zip $baseUrl/QLogger/zip/$qlCommitHash
	curl -o QPinnableTabWidget.zip $baseUrl/QPinnableTabWidget/zip/$qpwCommitHash
	unzip BenchmarkTool.zip
	unzip QLogger.zip
	unzip QPinnableTabWidget.zip
	mv BenchmarkTool-$bmtCommitHash BenchmarkTool
	mv QLogger-$qlCommitHash QLogger
	mv QPinnableTabWidget-$qpwCommitHash QPinnableTabWidget
	rm BenchmarkTool.zip
	rm QLogger.zip
	rm QPinnableTabWidget.zip
}

BUILD()
{
	getSourceSubmodules
	qmake GitQlient.pro
	make $jobArgs
}

INSTALL()
{
	mkdir -p $appsDir
	cp GitQlient $appsDir

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3 | cut -d~ -f1`"

	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/gitqlient.rdef.in > gitqlient.rdef

	addResourcesToBinaries gitqlient.rdef $appsDir/GitQlient
	addAppDeskbarSymlink $appsDir/GitQlient
}